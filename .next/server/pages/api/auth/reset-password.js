"use strict";(()=>{var e={};e.id=6524,e.ids=[6524],e.modules={2885:e=>{e.exports=require("@supabase/supabase-js")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7037:(e,r,s)=>{s.r(r),s.d(r,{config:()=>u,default:()=>i,routeModule:()=>l});var t={};s.r(t),s.d(t,{default:()=>handler});var a=s(1802),o=s(7153),d=s(6249),n=s(4768);async function handler(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{token:s,password:t}=e.body;if(!s||!t)return r.status(400).json({error:"Missing required fields"});let{data:a,error:o}=await n.O.from("password_reset_tokens").select("*").eq("token",s).gt("expires_at",new Date().toISOString()).single();if(o||!a)return r.status(400).json({error:"Invalid or expired token"});let{error:d}=await n.O.auth.admin.updateUserById(a.user_id,{password:t});if(d)return r.status(500).json({error:"Failed to update password"});return await n.O.from("password_reset_tokens").delete().eq("token",s),r.status(200).json({message:"Password reset successful"})}catch(e){return console.error("Password reset error:",e),r.status(500).json({error:"Server error"})}}let i=(0,d.l)(t,"default"),u=(0,d.l)(t,"config"),l=new a.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/auth/reset-password",pathname:"/api/auth/reset-password",bundlePath:"",filename:""},userland:t})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),s=r.X(0,[4222,4768],()=>__webpack_exec__(7037));module.exports=s})();